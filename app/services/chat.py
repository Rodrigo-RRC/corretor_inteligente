import os
from dotenv import load_dotenv
from openai import OpenAI
from app.core.estado_lead import (
    inicializar_lead, atualizar_estado, obter_estado,
    adicionar_ao_historico, obter_historico
)

# Carrega vari√°veis do .env
load_dotenv()
api_key = os.getenv("OPENAI_API_KEY")
client = OpenAI(api_key=api_key)

def obter_resposta(pergunta, lead_id):
    if obter_estado(lead_id) is None:
        inicializar_lead(lead_id)

    estado = obter_estado(lead_id)

    # PAUSA: aguardando comando de simula√ß√£o
    if estado == "aguardando_simulacao" and not pergunta.startswith("#resposta_simulacao:"):
        return "Certo! Assim que a simula√ß√£o estiver pronta, eu te aviso por aqui mesmo. üòâ"

    # COMANDO INTERNO: resposta da simula√ß√£o
    if pergunta.startswith("#resposta_simulacao:"):
        mensagem = pergunta.split(":", 2)[2]
        atualizar_estado(lead_id, "respondeu_simulacao")
        adicionar_ao_historico(lead_id, "assistant", mensagem)
        return mensagem

    # MONTA O PROMPT
    instrucoes_sistema = """
    Voc√™ √© Bruna, uma agente virtual inteligente especializada em im√≥veis do programa Minha Casa Minha Vida.
    Seu papel √© conduzir o atendimento de forma emp√°tica e inteligente, entendendo o contexto da conversa e guiando o cliente com naturalidade at√© a simula√ß√£o ou agendamento da visita.

    REGRAS DE CONDUTA:
    - Nunca entregue o endere√ßo do im√≥vel (diga apenas "pr√≥ximo ao Bairro Geisel").
    - Envie tr√™s fotos do im√≥vel ap√≥s a apresenta√ß√£o textual, simulando pausas como se estivesse digitando.
    - Apresente as op√ß√µes de entrada:
      1) √â a primeira vez que tento comprar meu im√≥vel pr√≥prio
      2) J√° tentei outras vezes, mas n√£o consegui
      3) J√° tenho carta aprovada e quero visitar o im√≥vel
    - Se a op√ß√£o for 3, solicite a carta de cr√©dito ou simula√ß√£o via WhatsApp.
    - Se a op√ß√£o for 1 ou 2, inicie uma coleta de informa√ß√µes para simula√ß√£o.

   SEGUIMENTO DA COLETA:
   1. Quem vai financiar o im√≥vel com voc√™? (S√≥ voc√™, com c√¥njuge, ou mais algu√©m?)
   2. Como √© a forma de trabalho da(s) pessoa(s) que ir√°/ir√£o financiar? (Carteira assinada, aut√¥nomo, MEI...)
   3. Qual √© a renda familiar mensal total comprovada?
   4. Voc√™s t√™m ao menos 3 anos de carteira assinada (mesmo que somando diferentes empregos)?
   5. Qual a data de nascimento da pessoa que nasceu primeiro entre voc√™s?
   6. Voc√™s t√™m filhos ou outras pessoas que dependem financeiramente de voc√™s?
   7. T√™m algum valor dispon√≠vel para dar de entrada? (Pode usar FGTS)
"""

    if estado == "apresentacao":
        atualizar_estado(lead_id, "coletando_dados")
        return """Ol√°! Sou a Bruna, sua corretora virtual ‚Äî uma agente inteligente aqui pra te ajudar com im√≥veis do Minha Casa Minha Vida.

   Este im√≥vel fica pr√≥ximo ao Bairro Geisel, tem 1 su√≠te + 1 quarto, √°rea de lazer completa, e est√° saindo a partir de R$ 178 mil.

   (Foto 1)
     ...aguarda...
   (Foto 2)
     ...aguarda...
   (Foto 3)

   Agora me diga:
   1Ô∏è‚É£ √â a primeira vez que tenta comprar seu im√≥vel?
   2Ô∏è‚É£ J√° tentou outras vezes e n√£o conseguiu?
   3Ô∏è‚É£ J√° tem carta aprovada e quer visitar o im√≥vel?

   Responda com 1, 2 ou 3, por favor üòä"""

     mensagens = [{"role": "system", "content": instrucoes_sistema}]
     mensagens.extend(obter_historico(lead_id))
     mensagens.append({"role": "user", "content": pergunta})

    try:
        resposta = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=mensagens,
            temperature=0.7
        )

        conteudo = resposta.choices[0].message.content.strip()

        adicionar_ao_historico(lead_id, "user", pergunta)
        adicionar_ao_historico(lead_id, "assistant", conteudo)

        # GATILHOS que disparam pausa
        gatilhos_pausa = [
            "vou preparar uma simula√ß√£o",
            "vou calcular os valores e condi√ß√µes",
            "em seguida te passo as informa√ß√µes",
            "posso prosseguir com a simula√ß√£o",
            "vou calcular"
        ]

        if any(g in conteudo.lower() for g in gatilhos_pausa):
            atualizar_estado(lead_id, "aguardando_simulacao")
            return "Perfeito! J√° coletei tudo que preciso.\nVou preparar a simula√ß√£o com base nesses dados e te aviso por aqui mesmo assim que ela estiver pronta, tudo bem?"

        return conteudo

    except Exception as e:
        return f"Erro ao gerar resposta: {str(e)}"

